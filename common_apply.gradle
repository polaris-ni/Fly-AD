apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    def android = rootProject.ext.android
    compileSdk android.compileSdkVersion

    defaultConfig {
        minSdk android.minSdkVersion
        targetSdk android.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                //根据模块名来命名路由根节点
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' , 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // kotlin中使用kapt ARouter的注解处理器
    kapt 'com.alibaba:arouter-compiler:1.5.2'
    // Room
    kapt "androidx.room:room-compiler:2.4.2"
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'
}